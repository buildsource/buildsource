services:
  mongo:
    container_name: mongo
    build:
      context: ./mongo
      dockerfile: Dockerfile
    env_file:
      - ./mongo/.env.local
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - mynetwork
    restart: always

  mongo_backup:
    image: mongo:latest
    container_name: mongo_backup
    command: /bin/sh /backup.sh
    volumes:
      - ./backup.sh:/backup.sh       # Monte o script no contêiner
      - ./backup_data:/backup/mongodb  # Diretório para armazenar os backups
    networks:
      - mynetwork
    depends_on:
      - mongo

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: >
      certonly --webroot --staging --webroot-path=/var/www/certbot
      --email claudineiarneckedelima@gmail.com
      --agree-tos --no-eff-email
      --force-renewal
      -d sensuo.site
    networks:
      - mynetwork
    restart: always

  minio:
    image: minio/minio
    container_name: minio
    env_file:
      - ./minio/.env.local
    ports:
      - "9000:9000"  # Porta do serviço MinIO
      - "9001:9001"  # Porta do console do MinIO
    volumes:
      - minio_data:/data  # Volume para persistência de dados do MinIO
    command: server /data --console-address ":9001"
    networks:
      - mynetwork

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - mongo
      - mongo_backup
      - certbot
      - minio
    networks:
      - mynetwork
    restart: always

networks:
  mynetwork:
    external: true

volumes:
  mongo_data:
  backup_data:
  minio_data:

